{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Welloxy\\\\CascadeProjects\\\\windsurf-project\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Clock from './components/Clock/Clock';\nimport SettingsMenu from './components/SettingsMenu/SettingsMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showSettingsButton, setShowSettingsButton] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const settingsButtonTimeoutRef = useRef(null);\n\n  // State for customization\n  const [clockTextColor, setClockTextColor] = useState('#333333');\n  const [appBackgroundColor, setAppBackgroundColor] = useState('#f0f0f0');\n  const [clockFontFamily, setClockFontFamily] = useState(\"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\");\n  const [clockTextSize, setClockTextSize] = useState('18vw');\n  const [isKlockMode, setIsKlockMode] = useState(false);\n  const [clockPosition, setClockPosition] = useState({\n    top: '50%',\n    left: '50%'\n  });\n  const [settingsMenuPosition, setSettingsMenuPosition] = useState({\n    top: '20px',\n    right: '20px'\n  });\n  const [secondsProgress, setSecondsProgress] = useState(0);\n  const [isFocusModeActive, setIsFocusModeActive] = useState(false);\n  const [focusElapsedTimeInSeconds, setFocusElapsedTimeInSeconds] = useState(0);\n  const handleAppClick = () => {\n    if (isMenuOpen) return;\n    setShowSettingsButton(true);\n    if (settingsButtonTimeoutRef.current) {\n      clearTimeout(settingsButtonTimeoutRef.current);\n    }\n    settingsButtonTimeoutRef.current = setTimeout(() => {\n      setShowSettingsButton(false);\n    }, 3000); // Hide after 3 seconds of inactivity\n  };\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n    if (!isMenuOpen) {\n      setShowSettingsButton(true);\n      if (settingsButtonTimeoutRef.current) {\n        clearTimeout(settingsButtonTimeoutRef.current);\n      }\n    } else {\n      handleAppClick();\n    }\n  };\n  const toggleFocusMode = () => {\n    setIsFocusModeActive(prev => {\n      if (!prev) {\n        // If activating focus mode\n        setFocusElapsedTimeInSeconds(0);\n      }\n      return !prev;\n    });\n  };\n  useEffect(() => {\n    return () => {\n      if (settingsButtonTimeoutRef.current) {\n        clearTimeout(settingsButtonTimeoutRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    let progressTimerId;\n    if (isKlockMode) {\n      const updateProgress = () => {\n        const currentSeconds = new Date().getSeconds();\n        // Ensure 59 seconds maps to 100% for a full bar at the end of the minute\n        setSecondsProgress(currentSeconds / 59 * 100);\n      };\n      updateProgress(); // Call once immediately to set initial progress\n      progressTimerId = setInterval(updateProgress, 200); // Update frequently for smoothness\n    } else {\n      setSecondsProgress(0); // Reset progress if KlockMode is off\n    }\n    return () => {\n      clearInterval(progressTimerId); // Clear interval on cleanup or when isKlockMode changes\n    };\n  }, [isKlockMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onClick: handleAppClick,\n    style: {\n      backgroundColor: appBackgroundColor\n    } // Apply background color\n    ,\n    children: [/*#__PURE__*/_jsxDEV(Clock, {\n      textColor: clockTextColor,\n      fontFamily: clockFontFamily,\n      textSize: clockTextSize,\n      isKlockMode: isKlockMode,\n      position: clockPosition,\n      setPosition: setClockPosition,\n      isDraggable: isMenuOpen // Clock is draggable only when the menu is open\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), showSettingsButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"settings-button\",\n      onClick: e => {\n        e.stopPropagation();\n        toggleMenu();\n      },\n      children: \"\\u2699\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), (showSettingsButton || isFocusModeActive) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `focus-mode-button visible`,\n      onClick: toggleFocusMode,\n      title: isFocusModeActive ? \"Stop Focus Mode\" : \"Start Focus Mode\",\n      children: \"\\u23F1\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SettingsMenu, {\n      isOpen: isMenuOpen,\n      onClose: toggleMenu,\n      clockTextColor: clockTextColor,\n      onClockTextColorChange: setClockTextColor,\n      appBackgroundColor: appBackgroundColor,\n      onAppBackgroundColorChange: setAppBackgroundColor,\n      clockFontFamily: clockFontFamily,\n      onClockFontFamilyChange: setClockFontFamily,\n      clockTextSize: clockTextSize,\n      onClockTextSizeChange: setClockTextSize,\n      isKlockMode: isKlockMode,\n      onKlockModeChange: setIsKlockMode,\n      menuPosition: settingsMenuPosition // Pass position\n      ,\n      setMenuPosition: setSettingsMenuPosition // Pass setter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), isKlockMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-klock-progress-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-klock-progress-bar\",\n        style: {\n          width: `${secondsProgress}%`,\n          backgroundColor: clockTextColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BuL046CB+zVKnkqb3moqPdV/Qkk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Clock","SettingsMenu","jsxDEV","_jsxDEV","App","_s","showSettingsButton","setShowSettingsButton","isMenuOpen","setIsMenuOpen","settingsButtonTimeoutRef","clockTextColor","setClockTextColor","appBackgroundColor","setAppBackgroundColor","clockFontFamily","setClockFontFamily","clockTextSize","setClockTextSize","isKlockMode","setIsKlockMode","clockPosition","setClockPosition","top","left","settingsMenuPosition","setSettingsMenuPosition","right","secondsProgress","setSecondsProgress","isFocusModeActive","setIsFocusModeActive","focusElapsedTimeInSeconds","setFocusElapsedTimeInSeconds","handleAppClick","current","clearTimeout","setTimeout","toggleMenu","toggleFocusMode","prev","progressTimerId","updateProgress","currentSeconds","Date","getSeconds","setInterval","clearInterval","className","onClick","style","backgroundColor","children","textColor","fontFamily","textSize","position","setPosition","isDraggable","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","title","isOpen","onClose","onClockTextColorChange","onAppBackgroundColorChange","onClockFontFamilyChange","onClockTextSizeChange","onKlockModeChange","menuPosition","setMenuPosition","width","_c","$RefreshReg$"],"sources":["C:/Users/Welloxy/CascadeProjects/windsurf-project/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, Dispatch, SetStateAction } from 'react';\nimport './App.css';\nimport Clock from './components/Clock/Clock';\nimport SettingsMenu from './components/SettingsMenu/SettingsMenu';\n\nfunction App() {\n  const [showSettingsButton, setShowSettingsButton] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const settingsButtonTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // State for customization\n  const [clockTextColor, setClockTextColor] = useState<string>('#333333');\n  const [appBackgroundColor, setAppBackgroundColor] = useState<string>('#f0f0f0');\n  const [clockFontFamily, setClockFontFamily] = useState<string>(\"-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\");\n  const [clockTextSize, setClockTextSize] = useState<string>('18vw');\n  const [isKlockMode, setIsKlockMode] = useState<boolean>(false);\n  const [clockPosition, setClockPosition] = useState<{ top: string; left: string }>({ top: '50%', left: '50%' });\n  const [settingsMenuPosition, setSettingsMenuPosition] = useState<{ top: string; right: string }>({ top: '20px', right: '20px' });\n  const [secondsProgress, setSecondsProgress] = useState(0);\n  const [isFocusModeActive, setIsFocusModeActive] = useState<boolean>(false);\n  const [focusElapsedTimeInSeconds, setFocusElapsedTimeInSeconds] = useState<number>(0);\n\n  const handleAppClick = () => {\n    if (isMenuOpen) return;\n\n    setShowSettingsButton(true);\n    if (settingsButtonTimeoutRef.current) {\n      clearTimeout(settingsButtonTimeoutRef.current);\n    }\n    settingsButtonTimeoutRef.current = setTimeout(() => {\n      setShowSettingsButton(false);\n    }, 3000); // Hide after 3 seconds of inactivity\n  };\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n    if (!isMenuOpen) {\n      setShowSettingsButton(true);\n      if (settingsButtonTimeoutRef.current) {\n        clearTimeout(settingsButtonTimeoutRef.current);\n      }\n    } else {\n      handleAppClick();\n    }\n  };\n\n  const toggleFocusMode = () => {\n    setIsFocusModeActive(prev => {\n      if (!prev) { // If activating focus mode\n        setFocusElapsedTimeInSeconds(0);\n      }\n      return !prev;\n    });\n  };\n\n  useEffect(() => {\n    return () => {\n      if (settingsButtonTimeoutRef.current) {\n        clearTimeout(settingsButtonTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    let progressTimerId: ReturnType<typeof setInterval>;\n    if (isKlockMode) {\n      const updateProgress = () => {\n        const currentSeconds = new Date().getSeconds();\n        // Ensure 59 seconds maps to 100% for a full bar at the end of the minute\n        setSecondsProgress((currentSeconds / 59) * 100); \n      };\n      updateProgress(); // Call once immediately to set initial progress\n      progressTimerId = setInterval(updateProgress, 200); // Update frequently for smoothness\n    } else {\n      setSecondsProgress(0); // Reset progress if KlockMode is off\n    }\n    return () => {\n      clearInterval(progressTimerId); // Clear interval on cleanup or when isKlockMode changes\n    };\n  }, [isKlockMode]);\n\n  return (\n    <div \n      className=\"App\"\n      onClick={handleAppClick} \n      style={{ backgroundColor: appBackgroundColor }} // Apply background color\n    >\n      <Clock \n        textColor={clockTextColor} \n        fontFamily={clockFontFamily} \n        textSize={clockTextSize} \n        isKlockMode={isKlockMode} \n        position={clockPosition} \n        setPosition={setClockPosition}\n        isDraggable={isMenuOpen} // Clock is draggable only when the menu is open\n      />\n      {showSettingsButton && (\n        <button \n          className=\"settings-button\" \n          onClick={(e) => { \n            e.stopPropagation();\n            toggleMenu();\n          }}\n        >\n          ⚙️\n        </button>\n      )}\n      {(showSettingsButton || isFocusModeActive) && (\n        <button \n          className={`focus-mode-button visible`}\n          onClick={toggleFocusMode}\n          title={isFocusModeActive ? \"Stop Focus Mode\" : \"Start Focus Mode\"}\n        >\n          ⏱️\n        </button>\n      )}\n      <SettingsMenu \n        isOpen={isMenuOpen} \n        onClose={toggleMenu}\n        clockTextColor={clockTextColor}\n        onClockTextColorChange={setClockTextColor}\n        appBackgroundColor={appBackgroundColor}\n        onAppBackgroundColorChange={setAppBackgroundColor}\n        clockFontFamily={clockFontFamily}\n        onClockFontFamilyChange={setClockFontFamily}\n        clockTextSize={clockTextSize}\n        onClockTextSizeChange={setClockTextSize}\n        isKlockMode={isKlockMode}\n        onKlockModeChange={setIsKlockMode}\n        menuPosition={settingsMenuPosition} // Pass position\n        setMenuPosition={setSettingsMenuPosition} // Pass setter\n      />\n      {isKlockMode && (\n        <div className=\"app-klock-progress-bar-container\">\n          <div \n            className=\"app-klock-progress-bar\"\n            style={{ width: `${secondsProgress}%`, backgroundColor: clockTextColor }}\n          ></div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}