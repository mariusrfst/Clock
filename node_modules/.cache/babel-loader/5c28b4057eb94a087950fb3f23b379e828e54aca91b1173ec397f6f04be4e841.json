{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Welloxy\\\\CascadeProjects\\\\windsurf-project\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Clock from './components/Clock/Clock';\nimport SettingsMenu from './components/SettingsMenu/SettingsMenu'; // Import SettingsMenu\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showSettingsButton, setShowSettingsButton] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false); // State for menu visibility\n  const settingsButtonTimeoutRef = useRef(null);\n  const handleAppClick = () => {\n    if (isMenuOpen) return; // Don't show button if menu is already open\n\n    setShowSettingsButton(true);\n    if (settingsButtonTimeoutRef.current) {\n      clearTimeout(settingsButtonTimeoutRef.current);\n    }\n    settingsButtonTimeoutRef.current = setTimeout(() => {\n      setShowSettingsButton(false);\n    }, 5000); // Hide settings icon after 5 seconds of inactivity\n  };\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n    // Keep settings button visible while menu is open\n    if (!isMenuOpen) {\n      // If menu is about to open\n      setShowSettingsButton(true);\n      if (settingsButtonTimeoutRef.current) {\n        clearTimeout(settingsButtonTimeoutRef.current);\n      }\n    } else {\n      // If menu is about to close, restart timer for button\n      handleAppClick();\n    }\n  };\n  useEffect(() => {\n    // Clear timeout on component unmount\n    return () => {\n      if (settingsButtonTimeoutRef.current) {\n        clearTimeout(settingsButtonTimeoutRef.current);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    onClick: handleAppClick,\n    children: [/*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showSettingsButton && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"settings-button\",\n      onClick: e => {\n        e.stopPropagation(); // Prevent App click handler\n        toggleMenu();\n      },\n      children: \"\\u2699\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SettingsMenu, {\n      isOpen: isMenuOpen,\n      onClose: toggleMenu\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A00BJc4YDqH66b2tqijz8iWYFi8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Clock","SettingsMenu","jsxDEV","_jsxDEV","App","_s","showSettingsButton","setShowSettingsButton","isMenuOpen","setIsMenuOpen","settingsButtonTimeoutRef","handleAppClick","current","clearTimeout","setTimeout","toggleMenu","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","isOpen","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Welloxy/CascadeProjects/windsurf-project/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Clock from './components/Clock/Clock';\nimport SettingsMenu from './components/SettingsMenu/SettingsMenu'; // Import SettingsMenu\n\nfunction App() {\n  const [showSettingsButton, setShowSettingsButton] = useState(false);\n  const [isMenuOpen, setIsMenuOpen] = useState(false); // State for menu visibility\n  const settingsButtonTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const handleAppClick = () => {\n    if (isMenuOpen) return; // Don't show button if menu is already open\n\n    setShowSettingsButton(true);\n    if (settingsButtonTimeoutRef.current) {\n      clearTimeout(settingsButtonTimeoutRef.current);\n    }\n    settingsButtonTimeoutRef.current = setTimeout(() => {\n      setShowSettingsButton(false);\n    }, 5000); // Hide settings icon after 5 seconds of inactivity\n  };\n\n  const toggleMenu = () => {\n    setIsMenuOpen(!isMenuOpen);\n    // Keep settings button visible while menu is open\n    if (!isMenuOpen) { // If menu is about to open\n        setShowSettingsButton(true);\n        if (settingsButtonTimeoutRef.current) {\n            clearTimeout(settingsButtonTimeoutRef.current);\n        }\n    } else { // If menu is about to close, restart timer for button\n        handleAppClick(); \n    }\n  };\n\n  useEffect(() => {\n    // Clear timeout on component unmount\n    return () => {\n      if (settingsButtonTimeoutRef.current) {\n        clearTimeout(settingsButtonTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"App\" onClick={handleAppClick}>\n      <Clock />\n      {showSettingsButton && (\n        <button \n          className=\"settings-button\" \n          onClick={(e) => { \n            e.stopPropagation(); // Prevent App click handler\n            toggleMenu();\n          }}\n        >\n          ⚙️\n        </button>\n      )}\n      <SettingsMenu isOpen={isMenuOpen} onClose={toggleMenu} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,YAAY,MAAM,wCAAwC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnE,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAMa,wBAAwB,GAAGX,MAAM,CAAwB,IAAI,CAAC;EAEpE,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIH,UAAU,EAAE,OAAO,CAAC;;IAExBD,qBAAqB,CAAC,IAAI,CAAC;IAC3B,IAAIG,wBAAwB,CAACE,OAAO,EAAE;MACpCC,YAAY,CAACH,wBAAwB,CAACE,OAAO,CAAC;IAChD;IACAF,wBAAwB,CAACE,OAAO,GAAGE,UAAU,CAAC,MAAM;MAClDP,qBAAqB,CAAC,KAAK,CAAC;IAC9B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBN,aAAa,CAAC,CAACD,UAAU,CAAC;IAC1B;IACA,IAAI,CAACA,UAAU,EAAE;MAAE;MACfD,qBAAqB,CAAC,IAAI,CAAC;MAC3B,IAAIG,wBAAwB,CAACE,OAAO,EAAE;QAClCC,YAAY,CAACH,wBAAwB,CAACE,OAAO,CAAC;MAClD;IACJ,CAAC,MAAM;MAAE;MACLD,cAAc,CAAC,CAAC;IACpB;EACF,CAAC;EAEDb,SAAS,CAAC,MAAM;IACd;IACA,OAAO,MAAM;MACX,IAAIY,wBAAwB,CAACE,OAAO,EAAE;QACpCC,YAAY,CAACH,wBAAwB,CAACE,OAAO,CAAC;MAChD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKa,SAAS,EAAC,KAAK;IAACC,OAAO,EAAEN,cAAe;IAAAO,QAAA,gBAC3Cf,OAAA,CAACH,KAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACRhB,kBAAkB,iBACjBH,OAAA;MACEa,SAAS,EAAC,iBAAiB;MAC3BC,OAAO,EAAGM,CAAC,IAAK;QACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;QACrBT,UAAU,CAAC,CAAC;MACd,CAAE;MAAAG,QAAA,EACH;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,eACDnB,OAAA,CAACF,YAAY;MAACwB,MAAM,EAAEjB,UAAW;MAACkB,OAAO,EAAEX;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV;AAACjB,EAAA,CAxDQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}